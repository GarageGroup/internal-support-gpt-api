name: Build and push packages
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

     # Add NuGet Sources

    - name: Create Local NuGet Directory
      run: mkdir ~/nuget

    - name: Add Local Nuget Source
      run: dotnet nuget add source ~/nuget

    - name: Add Garage Group NuGet Source
      run: >
        dotnet nuget add source ${{ vars.GG_NUGET_SOURCE_URL }}
        -n garage
        -u ${{ secrets.GG_NUGET_SOURCE_USER_NAME }}
        -p ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --store-password-in-clear-text

    # Contract.csproj

    - name: Restore Contract.csproj
      run: dotnet restore ./src/*/Contract.csproj

    - name: Build Contract.csproj
      run: dotnet build ./src/*/Contract.csproj --no-restore  -c Release

    - name: Pack Contract.csproj
      run: dotnet pack ./src/*/Contract.csproj --no-build -o ~/nuget  -c Release

    # Api.csproj

    - name: Restore Api.csproj
      run: dotnet restore ./src/*/Api.csproj

    - name: Build Api.csproj
      run: dotnet build ./src/*/Api.csproj --no-restore  -c Release

    - name: Pack Api.csproj
      run: dotnet pack ./src/*/Api.csproj --no-build -o ~/nuget  -c Release

    # Test.csproj

    - name: Restore Test
      run: dotnet restore ./src/*/Test.csproj

    - name: Test Test
      run: dotnet test ./src/*/Test.csproj --no-restore -o ~/nuget  -c Release

    # Push

    - name: Push Packages
      if: ${{ github.ref == 'refs/heads/main' }}
      run: >
        dotnet nuget push "../../../nuget/*.nupkg"
        -s ${{ vars.GG_NUGET_SOURCE_URL }}
        -k ${{ secrets.GG_NUGET_SOURCE_USER_PASSWORD }}
        --skip-duplicate